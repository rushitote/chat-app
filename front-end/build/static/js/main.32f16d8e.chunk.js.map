{"version":3,"sources":["components/Chat/Message.module.css","components/LeftPane/Users/UsersList.module.css","components/Input/Input.module.css","components/Chat/Messages.module.css","components/Chat/ChatWindow.module.css","images/send.png","utils/messagesContext.tsx","components/Input/Input.tsx","components/Chat/Message.tsx","images/avatar.png","components/Chat/Messages.tsx","components/Chat/ChatWindow.tsx","components/LeftPane/Users/UsersList.tsx","App.tsx","index.tsx"],"names":["module","exports","messageContext","createContext","sent","received","sendMessage","message","users","Input","props","ctx","useContext","messageBoxRef","useRef","current","value","trim","length","content","username","className","styles","type","ref","onKeyDown","e","key","placeholder","src","image","alt","onClick","Message","Messages","scrollRef","useEffect","scrollTop","scrollHeight","map","avatar","Math","random","ChatWindow","UsersList","user","App","useState","sentMessages","receivedMessages","setReceivedMessages","usersList","Provider","prevState","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32f16d8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2p-3Q\",\"message-user-image\":\"Message_message-user-image__1hev2\",\"message-body\":\"Message_message-body__3ljLJ\",\"message-user-name\":\"Message_message-user-name__TBf-M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-list\":\"UsersList_user-list__23uSB\",\"user-list-heading\":\"UsersList_user-list-heading__10W8x\",\"user-list-users\":\"UsersList_user-list-users__2KleQ\",\"user-image\":\"UsersList_user-image__3mPmC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-box\":\"Input_input-box__3j1Qs\",\"input\":\"Input_input__3PNbO\",\"input-send-message\":\"Input_input-send-message__37fof\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat-messages\":\"Messages_chat-messages__2Rj0J\",\"chat-messages-container\":\"Messages_chat-messages-container__1t7eF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat-window\":\"ChatWindow_chat-window__QvYlw\"};","export default __webpack_public_path__ + \"static/media/send.2ce2a557.png\";","import { createContext } from 'react'\n\nexport interface Message {\n  content: string\n  username: string\n  image?: string\n}\n\ninterface globalContext {\n  sent: Message[]\n  received: Message[]\n  sendMessage: Function\n  users: string[]\n}\n\nconst messageContext = createContext<globalContext>({\n  sent: [],\n  received: [],\n  sendMessage: (message: Message) => {},\n  users: [],\n})\n\nexport default messageContext\n","import styles from './Input.module.css'\nimport image from '../../images/send.png'\nimport { KeyboardEvent, useRef } from 'react'\nimport { useContext } from 'react'\nimport messageContext, { Message } from '../../utils/messagesContext'\nexport interface IInputProps {}\n\nexport default function Input(props: IInputProps) {\n  const ctx = useContext(messageContext)\n  const messageBoxRef = useRef<HTMLInputElement>(null)\n\n  const sendMessage = () => {\n    if (messageBoxRef.current !== null) {\n      if (messageBoxRef.current.value.trim().length !== 0) {\n        const message: Message = {\n          content: messageBoxRef.current.value,\n          username: 'Me',\n        }\n        ctx.sendMessage(message)\n        messageBoxRef.current.value = ''\n      }\n    }\n  }\n  const keyUpHandler = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      sendMessage()\n    }\n  }\n  return (\n    <div className={styles['input']}>\n      <input\n        type=\"text\"\n        className={styles['input-box']}\n        ref={messageBoxRef}\n        onKeyDown={keyUpHandler}\n        placeholder=\"Type your message here\"\n      />\n      <div className={`${styles['input-send-message']}`}>\n        <img src={image} alt=\"\" onClick={sendMessage} />\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport styles from './Message.module.css'\nexport interface IMessageProps {\n  content: string\n  image: string\n  username: string\n}\n\nexport default function Message(props: IMessageProps) {\n  return (\n    <div className={styles['message']}>\n      <img\n        className={styles['message-user-image']}\n        alt=\"User profile\"\n        src={props.image}\n      />\n      <div className={styles['message-body']}>\n        <div className={styles['message-user-name']}>{props.username}</div>\n        <div className={styles['message-body-text']}>{props.content}</div>\n      </div>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/avatar.9eab2a92.png\";","import messageContext from '../../utils/messagesContext'\nimport styles from './Messages.module.css'\nimport { useContext, useRef, useEffect } from 'react'\nimport Message from './Message'\nimport avatar from '../../images/avatar.png'\nexport interface IMessagesProps {}\n\nexport default function Messages(props: IMessagesProps) {\n  const ctx = useContext(messageContext)\n  const scrollRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (scrollRef.current !== null)\n      scrollRef.current.scrollTop = scrollRef.current?.scrollHeight\n  }, [ctx])\n  return (\n    <div className={styles['chat-messages-container']} ref={scrollRef}>\n      <div className={styles['chat-messages']}>\n        {ctx.received.map((message) => {\n          return (\n            <Message\n              content={message.content}\n              image={message.image || avatar}\n              username={message.username}\n              key={Math.random()}\n            />\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n","import styles from './ChatWindow.module.css'\nimport Input from '../Input/Input'\nimport Messages from './Messages'\nexport interface IChatWindowProps {}\n\nexport default function ChatWindow(props: IChatWindowProps) {\n  return (\n    <div className={styles['chat-window']}>\n      <Messages />\n      <Input />\n    </div>\n  )\n}\n","import { useContext } from 'react'\nimport messageContext from '../../../utils/messagesContext'\nimport styles from './UsersList.module.css'\nexport interface IUsersListProps {\n  image: string\n}\n\nexport default function UsersList(props: IUsersListProps) {\n  const ctx = useContext(messageContext)\n  return (\n    <ul className={styles['user-list']}>\n      <h1 className={styles['user-list-heading']}>Users</h1>\n      <div className={styles['user-list-users']}>\n        {ctx.users.map((user) => (\n          <li key={Math.random()}>\n            <img src={props.image} alt=\"\" className={styles['user-image']} />\n            {user}\n          </li>\n        ))}\n      </div>\n    </ul>\n  )\n}\n","import './App.css'\nimport ChatWindow from './components/Chat/ChatWindow'\nimport messageContext, { Message } from './utils/messagesContext'\nimport UsersList from './components/LeftPane/Users/UsersList'\n\nimport { useState } from 'react'\nimport avatar from './images/avatar.png'\nexport interface IAppProps {}\n\nexport default function App(props: IAppProps) {\n  const [sentMessages, setSentMessages] = useState([])\n  const [receivedMessages, setReceivedMessages] = useState([\n    {\n      content: 'Hello World',\n      username: 'Shashwat',\n      image: avatar,\n    },\n    {\n      content: 'Hello World',\n      username: 'Anonymous',\n      image: avatar,\n    },\n  ])\n  const [usersList, setUsersList] = useState(['Shashwat', 'Varun', 'Rushikesh'])\n  const sendMessage = (message: Message) => {\n    setReceivedMessages((prevState: any) => {\n      return prevState.concat(message)\n    })\n  }\n  return (\n    <messageContext.Provider\n      value={{\n        sent: sentMessages,\n        received: receivedMessages,\n        sendMessage,\n        users: usersList,\n      }}\n    >\n      <UsersList image={avatar} />\n      <ChatWindow />\n    </messageContext.Provider>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}